CREATE TABLE exam_film(
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    info TEXT not null,
    year_w YEAR not null,
    country VARCHAR(50) NOT NULL,
    s_writer VARCHAR(50) NOT NULL,
    director VARCHAR(50) NOT NULL,
    actors TEXT NOT NULL,
    duration INT not null,
    poster INT REFERENCES exam_image(id)
) ENGINE INNODB;

CREATE TABLE exam_rec(
    id INT PRIMARY KEY AUTO_INCREMENT,
    film_id int NOT NULL,
    user_id int NOT NULL,
    cnt int NOT NULL,
    opinion TEXT NOT NULL,
    date_op TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY(film_id) REFERENCES exam_film(id) ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFERENCES exam_users(id) ON DELETE CASCADE
) ENGINE INNODB;

CREATE TABLE exam_users(
    id INT PRIMARY KEY AUTO_INCREMENT,
    login varchar(50) NOT NULL,
    password_hash varchar(256) NOT NULL,
    last_name varchar(50) NOT NULL,
    first_name varchar(50) NOT NULL,
    fsecond_name varchar(50),
    role_id int not null,
    FOREIGN KEY(role_id) REFERENCES exam_roles(id)
) ENGINE INNODB;

CREATE TABLE genres(
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(25) UNIQUE NOT NULL
) ENGINE INNODB;

CREATE TABLE exam_genres_films(
    id_film INT NOT NULL,
    name_genre VARCHAR(25) NOT NULL,
    PRIMARY KEY(id_film, name_genre),
    FOREIGN KEY(id_film) REFERENCES exam_film(id) ON DELETE CASCADE,
    FOREIGN KEY(name_genre) REFERENCES exam_genres(name)
) ENGINE INNODB;

CREATE TABLE exam_compilations(
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(25) UNIQUE NOT NULL,
    user_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES exam_users(id)
) ENGINE INNODB;

CREATE TABLE exam_comp_films(
    id_film INT,
    id_comp INT,
    PRIMARY KEY(id_film, id_comp),
    FOREIGN KEY (id_film) REFERENCES exam_film(id) ON DELETE CASCADE,
    FOREIGN KEY (id_comp) REFERENCES exam_compilations(id) ON DELETE CASCADE
) ENGINE INNODB;

SELECT id, name, year_w, GROUP_CONCAT(name_genre) as genre_name FROM exam_film INNER JOIN exam_genres_films ON exam_film.id = exam_genres_films.id_film GROUP BY id

cursor.execute('SELECT id, name, info, country, s_writer, director, actors, duration, year_w, GROUP_CONCAT(name_genre) as genre FROM exam_film INNER JOIN exam_genres_films ON exam_film.id = exam_genres_films.id_film WHERE id =%s GROUP BY id;', (film_id,))


SELECT exam_film.id as film_id, name, year_w, CASE WHEN count(opinion) IS NULL THEN 0 ELSE count(opinion) END as op_cnt FROM exam_film LEFT JOIN exam_rec ON exam_film.id = exam_rec.film_id GROUP BY exam_film.id
SELECT exam_film.id as film_id, GROUP_CONCAT(name_genre) as genre_name FROM exam_film INNER JOIN exam_genres_films ON exam_film.id = exam_genres_films.id_film GROUP BY exam_film.id

SELECT * FROM (SELECT exam_film.id as film_id, name, year_w, CASE WHEN count(opinion) IS NULL THEN 0 ELSE count(opinion) END as op_cnt FROM exam_film LEFT JOIN exam_rec ON exam_film.id = exam_rec.film_id GROUP BY exam_film.id) op INNER JOIN(SELECT exam_film.id as film_id, GROUP_CONCAT(name_genre) as genre_name FROM exam_film INNER JOIN exam_genres_films ON exam_film.id = exam_genres_films.id_film GROUP BY exam_film.id) gen ON op.film_id = gen.film_id

{{ url_for('delete_film_compilation', film_id=film.id) }}